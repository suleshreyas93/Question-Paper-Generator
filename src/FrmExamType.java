/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Administrator
 */
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.*;
import mypack.*;
import java.sql.*;

public class FrmExamType extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrmExamType
     */int sid[],countSub=0,total[],mainquest[],countExam=0;
    String sql,e_id="E-",eid[],exEid,unm;
    
    public FrmExamType() {
        initComponents();
        
         connect_me.connect_all();
        
        
        
    }
    public FrmExamType(String user)
    {
        connect_me.connect_all();
        initComponents();
        unm=user;
        
           Image im= Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/abstract-pastel-blue-white-background-design-34948659.jpg"));
      
        Dimension dim= Toolkit.getDefaultToolkit().getScreenSize();
        Image j= im.getScaledInstance(dim.width,dim.height, Image.SCALE_DEFAULT);
        ImageIcon img = new ImageIcon(j);
        
        jLabel6.setIcon(img);
        jLabel6.setSize(DisplayMenu.jDesktopPane1.getWidth(), DisplayMenu.jDesktopPane1.getHeight());
   
        
        
        internal.setSelected(false);
        external.setSelected(false);
        edit.setVisible(false);
        try
        {
            if(connect_me.role.equalsIgnoreCase("Teacher"))
            {
            connect_me.st=connect_me.con.createStatement();
            sql="select count(s.sub_id) from subject s,teacher_subject t where t.teacher_id='"+unm+"' and t.sub_id=s.sub_id";
            connect_me.rs=connect_me.st.executeQuery(sql);
            if(connect_me.rs.next())
            {
                countSub=connect_me.rs.getInt(1);
            }
            sid=new int[countSub];
            connect_me.st.close();
            
            connect_me.st1=connect_me.con1.createStatement();
            sql="select s.sub_name,s.sub_id from subject s,teacher_subject t where t.teacher_id='"+unm+"' and t.sub_id=s.sub_id";
            connect_me.rs1=connect_me.st1.executeQuery(sql);
            
            int i=0;
            while(connect_me.rs1.next())
            {
                subject.addItem(connect_me.rs1.getString(1));
                sid[i]=connect_me.rs1.getInt(2);
                i++;
            }
            subject.setSelectedIndex(-1);
            }
            else if(connect_me.role.equalsIgnoreCase("Admin"))
            {
                connect_me.st=connect_me.con.createStatement();
            sql="select count(s.sub_id) from subject s";
            connect_me.rs=connect_me.st.executeQuery(sql);
            if(connect_me.rs.next())
            {
                countSub=connect_me.rs.getInt(1);
            }
            sid=new int[countSub];
            connect_me.st.close();
            
            connect_me.st1=connect_me.con1.createStatement();
            sql="select s.sub_name,s.sub_id from subject s ";
            connect_me.rs1=connect_me.st1.executeQuery(sql);
            
             int i=0;
            while(connect_me.rs1.next())
            {
                subject.addItem(connect_me.rs1.getString(1));
                sid[i]=connect_me.rs1.getInt(2);
                i++;
            }
            subject.setSelectedIndex(-1);
            }
            jLabel6.grabFocus();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }
    }
            
     public void clr()
    {
        subject.setSelectedIndex(-1);
       
        //internal.setSelected(false);
        //external.setSelected(false);
        ttl.setText("");
        mainQ.setText("");
        edit.setVisible(false);
        Submit.setEnabled(true);
        internal.setSelected(false);
        external.setSelected(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        subject = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ttl = new javax.swing.JTextField();
        mainQ = new javax.swing.JTextField();
        Submit = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        internal = new javax.swing.JRadioButton();
        external = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Choose Exam");
        setOpaque(true);
        setVisible(true);

        jPanel1.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jLabel2.setText("Subject");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(30, 30, 60, 40);

        subject.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        subject.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                subjectItemStateChanged(evt);
            }
        });
        jPanel1.add(subject);
        subject.setBounds(180, 20, 290, 50);

        jLabel3.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jLabel3.setText("Exam type");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(30, 130, 110, 20);

        jLabel4.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jLabel4.setText("Total Marks");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(30, 190, 100, 30);

        jLabel5.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jLabel5.setText("No. of Main Questions");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(30, 250, 150, 30);

        ttl.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        ttl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ttlActionPerformed(evt);
            }
        });
        jPanel1.add(ttl);
        ttl.setBounds(180, 190, 180, 30);

        mainQ.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jPanel1.add(mainQ);
        mainQ.setBounds(180, 250, 180, 30);

        Submit.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        Submit.setText("Create new");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });
        jPanel1.add(Submit);
        Submit.setBounds(100, 350, 140, 40);

        edit.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        jPanel1.add(edit);
        edit.setBounds(290, 350, 160, 40);

        buttonGroup1.add(internal);
        internal.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        internal.setText("Internal");
        internal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                internalItemStateChanged(evt);
            }
        });
        internal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                internalActionPerformed(evt);
            }
        });
        jPanel1.add(internal);
        internal.setBounds(180, 120, 100, 20);

        buttonGroup1.add(external);
        external.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        external.setText("External");
        external.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                externalItemStateChanged(evt);
            }
        });
        external.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                externalActionPerformed(evt);
            }
        });
        jPanel1.add(external);
        external.setBounds(330, 120, 120, 20);

        jLabel6.setText("jLabel6");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(0, 0, 550, 420);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        setBounds(0, 0, 568, 455);
    }// </editor-fold>//GEN-END:initComponents

    private void subjectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_subjectItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_subjectItemStateChanged

    private void ttlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ttlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ttlActionPerformed

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        // TODO add your handling code here:

        //Which RadioButton is selected
        int max=0,tot=0,mq=0;

        try
        {
            if(subject.getSelectedIndex()==-1)
            {
                JOptionPane.showMessageDialog(rootPane, "Please Select Subject");
                return;
            }
            if(ttl.getText().equals(""))
            {
                JOptionPane.showMessageDialog(rootPane, "Enter total marks");
                return;
            }
            if(mainQ.getText().equals(""))
            {
                JOptionPane.showMessageDialog(rootPane, "Enter No. of main questions");
                return;
            }
            tot=Integer.parseInt(ttl.getText());
            mq=Integer.parseInt(mainQ.getText());
            
            if(internal.isSelected())
            {
                Boolean flag=false;//checking all previous internal exam types having same total marks and same no.of main questions.
            int index=0;
            
            for(int i=0;i<total.length;i++)
            {
                if(tot==total[i] && mq==mainquest[i])
                {
                    
                    flag=true;
                    index=i;
                    break;
                }
                else
                {
                    flag=false;
                }
            }
            

            if(flag==true)
            {
                int wish=JOptionPane.showConfirmDialog(rootPane, "Exam Type Already Exists.Do you wish to define format for existing exam type?");
                if(wish==0)
                {
                    Dimension d;
                    //connect_me.st=connect_me.con.createStatement();
                    //connect_me.rs=connect_me.st.executeQuery("select exam_id from exam_type where ttlmrks="+total+",")

                    max=tot/mq;
                   /* JInternalFrame []x= DisplayMenu.jDesktopPane1.getAllFrames();
                    for(int i=0;i<x.length; i++)
                    {
                        x[i].dispose();
                    }*/
                    //this.dispose();
                    d=DisplayMenu.jDesktopPane1.getSize();
                     
                    FrmFormat f=new FrmFormat(Integer.parseInt(mainQ.getText()),sid[subject.getSelectedIndex()],eid[index],max);
                    f.setSize(d);
                    f.setPreferredSize(d);
                    f.setBounds(0,0,f.getWidth(),f.getHeight());
                    DisplayMenu.jDesktopPane1.add(f);
                    
                    f.show();
                    this.dispose();
                    //return;

                }
                else if(wish==1)
                {
                    //edit.setVisible(true);
                    Dimension d;
                    max=tot/mq;
                   
                    /*JInternalFrame []x= DisplayMenu.jDesktopPane1.getAllFrames();
                    for(int i=0;i<x.length; i++)
                    {
                        x[i].dispose();
                    }*/
                    d=DisplayMenu.jDesktopPane1.getSize();
                   
                    FrmGenPaper gp=new FrmGenPaper(sid[subject.getSelectedIndex()],Integer.parseInt(mainQ.getText()),eid[index],tot);
                    gp.setSize(d);
                    gp.setPreferredSize(d);
                    gp.setBounds(0,0,gp.getWidth(),gp.getHeight());
                    DisplayMenu.jDesktopPane1.add(gp);
                               
                    gp.show();
                     this.dispose();
                    //return;
                }
                else if(wish==2)
                {
                    return;
                }

            }
            else
            {
                max=tot/mq;
                if(max*mq==tot)
                {
                     int x= connect_me.autogen("exam_type", "exam_id");
                    //int id=connect_me.autogen("exam_type","exam_id");
                    e_id ="E-" + x;
                    
                        int mainquestion=Integer.parseInt(mainQ.getText().toString());
                        int c=sid[subject.getSelectedIndex()];
                        connect_me.st=connect_me.con.createStatement();
                        sql="insert into exam_type values('"+e_id+"','internal',"+ttl.getText()+","+mainquestion+","+sid[subject.getSelectedIndex()]+")";
                        connect_me.st.executeUpdate(sql);
                        //JOptionPane.showMessageDialog(rootPane, c);
                        JOptionPane.showMessageDialog(rootPane, "Exam Details Inserted");
                        //clr();
                        
                         Dimension d;
                    
                    
                    d=DisplayMenu.jDesktopPane1.getSize();
                    FrmGenPaper gp=new FrmGenPaper(c,mainquestion,e_id,tot);
                    gp.setSize(d);
                    gp.setPreferredSize(d);
                    gp.setBounds(0,0,gp.getWidth(),gp.getHeight());
                    DisplayMenu.jDesktopPane1.add(gp);
                               
                    gp.show();
                    this.dispose();

                        
                        
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "Equal distribution of marks will not be possible");
                }
            }
            }
            
                    else if(external.isSelected())
                    {
                        
                       connect_me.st=connect_me.con.createStatement();
                       sql="select * from exam_type where sub_id="+sid[subject.getSelectedIndex()]+" and etype='external'";
                       connect_me.rs=connect_me.st.executeQuery(sql);
                       if(connect_me.rs.next())
                       {
                           Dimension d;
                           e_id=connect_me.rs.getString(1);
                    
                        d=DisplayMenu.jDesktopPane1.getSize();
                        FrmGenPaper gp=new FrmGenPaper(sid[subject.getSelectedIndex()],Integer.parseInt(mainQ.getText()),e_id,tot);
                        gp.setSize(d);
                        gp.setPreferredSize(d);
                        gp.setBounds(0,0,gp.getWidth(),gp.getHeight());
                        DisplayMenu.jDesktopPane1.add(gp);
                               
                        gp.show();
                        this.dispose();

                       }
                       else
            
            {
                    max=tot/mq;
                 if(max*mq==tot)
                {
                     int x= connect_me.autogen("exam_type", "exam_id");
                    //int id=connect_me.autogen("exam_type","exam_id");
                    e_id ="E-" + x;
                    
                        int mainquestion=Integer.parseInt(mainQ.getText().toString());
                        int c=sid[subject.getSelectedIndex()];
                        connect_me.st=connect_me.con.createStatement();
                        sql="insert into exam_type values('"+e_id+"','external',"+ttl.getText()+","+mainquestion+","+sid[subject.getSelectedIndex()]+")";
                        connect_me.st.executeUpdate(sql);
                        //JOptionPane.showMessageDialog(rootPane, c);
                        JOptionPane.showMessageDialog(rootPane, "Exam Details Inserted");
                        //clr();
                        
                         Dimension d;
                    
                    
                    d=DisplayMenu.jDesktopPane1.getSize();
                    FrmGenPaper gp=new FrmGenPaper(c,mainquestion,e_id,tot);
                    gp.setSize(d);
                    gp.setPreferredSize(d);
                    gp.setBounds(0,0,gp.getWidth(),gp.getHeight());
                    DisplayMenu.jDesktopPane1.add(gp);
                               
                    gp.show();
                    this.dispose();

                        
                        
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "Equal distribution of marks will not be possible");
                }
            }
                        
                        
//                        max=tot/mq;
//                    if(max*mq==tot)
//                    {
//                     int x= connect_me.autogen("exam_type", "exam_id");
//                    //int id=connect_me.autogen("exam_type","exam_id");
//                    e_id ="E-" + x;
//                    
//                        int mainquestion=Integer.parseInt(mainQ.getText().toString());
//                        int c=sid[subject.getSelectedIndex()];
//                        connect_me.st=connect_me.con.createStatement();
//                        sql="insert into exam_type values('"+e_id+"','internal',"+ttl.getText()+","+mainquestion+","+sid[subject.getSelectedIndex()]+")";
//                        connect_me.st.executeUpdate(sql);
//                        //JOptionPane.showMessageDialog(rootPane, c);
//                        JOptionPane.showMessageDialog(rootPane, "Exam Details Inserted");
//                         Dimension d;
//                    
//                    
//                    d=DisplayMenu.jDesktopPane1.getSize();
//                    FrmGenPaper gp=new FrmGenPaper(Integer.parseInt(mainQ.getText()),sid[subject.getSelectedIndex()],exEid,20);
//                    gp.setSize(d);
//                    gp.setPreferredSize(d);
//                    gp.setBounds(0,0,gp.getWidth(),gp.getHeight());
//                    DisplayMenu.jDesktopPane1.add(gp);
//                               
//                    gp.show();
//                    this.dispose();
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "Choose an Exam type");
                    }
                
                    
                 
            }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }

            

      
            
    }//GEN-LAST:event_SubmitActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:

        /*
        try
        {
            if(ttl.getText().equals(""))
            {
                JOptionPane.showMessageDialog(rootPane, "Enter total marks");
                return;
            }
            if(mainQ.getText().equals(""))
            {
                JOptionPane.showMessageDialog(rootPane, "Enter total no. of questions");
                return;
            }
            if(Integer.parseInt(ttl.getText())==total && Integer.parseInt(mainQ.getText())==mainquest)
            {
                JOptionPane.showMessageDialog(rootPane, "Exam Type Already Exists.");
            }
            int max=Integer.parseInt(ttl.getText())/Integer.parseInt(mainQ.getText());
            if(max*Integer.parseInt(mainQ.getText())==Integer.parseInt(ttl.getText()))
            {
                connect_me.st=connect_me.con.createStatement();
                sql="update exam_type set ttl_mrks="+ttl.getText()+",noq="+mainQ.getText()+" where exam_id='"+eid+"'";
                connect_me.st.executeUpdate(sql);
                JOptionPane.showMessageDialog(rootPane, "Exam details Updated Successfully");
                clr();
                connect_me.st.close();
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, "Equal distribution of marks will not be possible");
            }

        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }
        */

    }//GEN-LAST:event_editActionPerformed

    private void internalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_internalItemStateChanged
        // TODO add your handling code here:
        try
        {
            if(subject.getSelectedIndex()!=-1 && internal.isSelected())
            {
                
                connect_me.st=connect_me.con.createStatement();
                sql="select count(exam_id) from exam_type where sub_id="+sid[subject.getSelectedIndex()]+" and etype='internal'";
                connect_me.rs=connect_me.st.executeQuery(sql);
                if(connect_me.rs.next())
                {
                    countExam=connect_me.rs.getInt(1);
                }
                connect_me.st.close();
                eid=new String[countExam];
                total=new int[countExam];
                mainquest=new int[countExam];
                
                connect_me.st=connect_me.con.createStatement();
                sql="select exam_id,ttl_mrks,noq from exam_type where sub_id="+sid[subject.getSelectedIndex()]+" and etype='internal'";
                connect_me.rs=connect_me.st.executeQuery(sql);
                int c=0;
                while(connect_me.rs.next())
                {
                    eid[c]=connect_me.rs.getString(1);
                    total[c]=connect_me.rs.getInt(2);
                    mainquest[c]=connect_me.rs.getInt(3);
                    //ttl.setText(total+"");
                    //mainQ.setText(mainquest+"");
                    //Submit.setEnabled(false);
                    //edit.setVisible(true);
                    
                    c++;
                }
                /*else
                {
                    Submit.setVisible(true);
                    //edit.setVisible(false);
                    ttl.setText("");
                    mainQ.setText("");
                }*/
                connect_me.st.close();
                 
                
            }

        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }

    }//GEN-LAST:event_internalItemStateChanged

    private void externalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_externalItemStateChanged
        // TODO add your handling code here:
        try
        {
            //JOptionPane.showMessageDialog(rootPane, buttonGroup1.getSelection());
            if(subject.getSelectedIndex()!=-1 && external.isSelected())
            {
                Submit.setText("Submit");
                
                
                
                
                connect_me.st=connect_me.con.createStatement();
                sql="select exam_id,ttl_mrks,noq from exam_type where sub_id="+sid[subject.getSelectedIndex()]+" and etype='external'";
                connect_me.rs=connect_me.st.executeQuery(sql);
                
                if(connect_me.rs.next())
                {
                    exEid=connect_me.rs.getString(1);
                    ttl.setText(connect_me.rs.getInt(2)+"");
                    mainQ.setText(connect_me.rs.getInt(3)+"");
                    ttl.setEditable(false);
                    mainQ.setEditable(false);
                    
                    //Submit.setEnabled(false);
                    //edit.setVisible(true);
                    
                    
                }
                
                connect_me.st.close();
                
            }
            else if(subject.getSelectedIndex()==-1)
            {
                JOptionPane.showMessageDialog(rootPane, "Please Select Subject");
                external.setSelected(false);
                return;
            }
            else
            {
                ttl.setEditable(true);
                mainQ.setEditable(true);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }
    }//GEN-LAST:event_externalItemStateChanged

    private void externalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_externalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_externalActionPerformed

    private void internalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_internalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_internalActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Submit;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton edit;
    private javax.swing.JRadioButton external;
    private javax.swing.JRadioButton internal;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    public javax.swing.JPanel jPanel1;
    private javax.swing.JTextField mainQ;
    private javax.swing.JComboBox subject;
    private javax.swing.JTextField ttl;
    // End of variables declaration//GEN-END:variables
}
