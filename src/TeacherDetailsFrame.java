/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Administrator
 */
import com.sun.org.apache.xpath.internal.operations.Mod;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.*;
import mypack.*;
import java.awt.Window;
import java.sql.ResultSet;
import java.util.Date;
import java.math.*;
import javax.swing.JOptionPane;
import mypack.connect_me;

public class TeacherDetailsFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form TeacherDetailsFrame
     */
    int sub_id[], wish, dy,mnth,yr;
    String tchr_id, fnm, lnm, email, address, dd, mm, yy, unm, pass, repass, secQ, secA, contact,username,currentRole;
    Date DOJ;
    boolean flag = false;

    public TeacherDetailsFrame(String unm) {
        initComponents();
        connect_me.connect_all();
        
        Image im= Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/abstract-pastel-blue-white-background-design-34948659.jpg"));
      
        Dimension dim= Toolkit.getDefaultToolkit().getScreenSize();
        Image j= im.getScaledInstance(dim.width,dim.height, Image.SCALE_REPLICATE);
        ImageIcon img = new ImageIcon(j);
        
        jLabel19.setIcon(img);
        jLabel19.setSize(DisplayMenu.jDesktopPane1.getWidth(), DisplayMenu.jDesktopPane1.getHeight());
        
        jLabel11.setIcon(img);
        jLabel11.setSize(DisplayMenu.jDesktopPane1.getWidth(), DisplayMenu.jDesktopPane1.getHeight());
        
        jLabel18.setIcon(img);
        jLabel18.setSize(DisplayMenu.jDesktopPane1.getWidth(), DisplayMenu.jDesktopPane1.getHeight());
/*
        for (int i = 1; i <= 31; i++) {
            day.addItem(i);
        }
*/
        regtab.setEnabled(false);
        subtab.setEnabled(false);
        username=unm;
        for (int i = 1; i < 13; i++) {
            month.addItem(i);
        }
        

        for (int i = 1980; i <= 2050; i++) {
            year.addItem(i);
        }

        String s1;

        try {
            connect_me.st = connect_me.con.createStatement();
            s1 = "select stream_name from stream";
            connect_me.rs = connect_me.st.executeQuery(s1);
            while (connect_me.rs.next()) 
            {
                strcombo.addItem(connect_me.rs.getString(1));
            }

        } 
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }

    }
    
  

    public void clearpd() 
    {
        firstnmtxt.setText("");
        lastnmtxt.setText("");
        day.setSelectedIndex(0);
        month.setSelectedIndex(0);
        year.setSelectedIndex(0);
        Contact.setText("");
        email_id.setText("");
        addr.setText("");

    }

    public void clearreg() {
        //unmtxt.setText("");
        pwd.setText("");
        repwd.setText("");
        securityQ.setSelectedIndex(0);
        ans.setText("");
    }

    public void clearsub() {
        strcombo.setSelectedIndex(-1);
        semcombo.setSelectedIndex(-1);
        subjects.removeAll();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        tab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        pdtab = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        firstnm = new javax.swing.JLabel();
        firstnmtxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lastnmtxt = new javax.swing.JTextField();
        month = new javax.swing.JComboBox();
        year = new javax.swing.JComboBox();
        day = new javax.swing.JComboBox();
        Contact = new javax.swing.JTextField();
        email_id = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        addr = new javax.swing.JTextArea();
        next = new javax.swing.JButton();
        Clr = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        regtab = new javax.swing.JPanel();
        unmtxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        pwd = new javax.swing.JPasswordField();
        repwd = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        securityQ = new javax.swing.JComboBox();
        ans = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        regnext = new javax.swing.JButton();
        Clrreg = new javax.swing.JButton();
        regbck = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        subtab = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        strcombo = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        semcombo = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        subjects = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        subbck = new javax.swing.JButton();
        clrall = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Teacher Registration");
        setVisible(true);

        tab.setBackground(new java.awt.Color(255, 255, 255));
        tab.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N

        jPanel1.setLayout(null);

        pdtab.setLayout(null);

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.setOpaque(false);
        jPanel5.setLayout(null);

        firstnm.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        firstnm.setText("First Name");
        jPanel5.add(firstnm);
        firstnm.setBounds(100, 30, 110, 30);

        firstnmtxt.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jPanel5.add(firstnmtxt);
        firstnmtxt.setBounds(50, 70, 180, 40);

        jLabel1.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jLabel1.setText("Last Name");
        jPanel5.add(jLabel1);
        jLabel1.setBounds(310, 30, 90, 30);

        lastnmtxt.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jPanel5.add(lastnmtxt);
        lastnmtxt.setBounds(260, 70, 190, 40);

        month.setFont(new java.awt.Font("Modern No. 20", 0, 14)); // NOI18N
        month.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Month" }));
        month.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                monthItemStateChanged(evt);
            }
        });
        jPanel5.add(month);
        month.setBounds(240, 210, 90, 30);

        year.setFont(new java.awt.Font("Modern No. 20", 0, 14)); // NOI18N
        year.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Year" }));
        year.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                yearItemStateChanged(evt);
            }
        });
        jPanel5.add(year);
        year.setBounds(130, 210, 90, 30);

        day.setFont(new java.awt.Font("Modern No. 20", 0, 14)); // NOI18N
        day.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Day" }));
        jPanel5.add(day);
        day.setBounds(350, 210, 80, 30);

        Contact.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jPanel5.add(Contact);
        Contact.setBounds(130, 260, 160, 30);

        email_id.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jPanel5.add(email_id);
        email_id.setBounds(130, 300, 350, 40);

        addr.setColumns(20);
        addr.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        addr.setRows(5);
        jScrollPane1.setViewportView(addr);

        jPanel5.add(jScrollPane1);
        jScrollPane1.setBounds(130, 360, 350, 90);

        next.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        next.setText("Next");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });
        jPanel5.add(next);
        next.setBounds(130, 470, 140, 40);

        Clr.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        Clr.setText("Clear");
        Clr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClrActionPerformed(evt);
            }
        });
        jPanel5.add(Clr);
        Clr.setBounds(300, 470, 150, 40);

        jLabel5.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jLabel5.setText("Address");
        jPanel5.add(jLabel5);
        jLabel5.setBounds(10, 360, 70, 30);

        jLabel4.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jLabel4.setText("Email id");
        jPanel5.add(jLabel4);
        jLabel4.setBounds(10, 310, 100, 30);

        jLabel3.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jLabel3.setText("Contact");
        jPanel5.add(jLabel3);
        jLabel3.setBounds(10, 260, 80, 30);

        jLabel2.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jLabel2.setText("Date Of Joining");
        jPanel5.add(jLabel2);
        jLabel2.setBounds(10, 210, 110, 30);

        pdtab.add(jPanel5);
        jPanel5.setBounds(140, 10, 490, 520);

        jLabel19.setText("jLabel19");
        pdtab.add(jLabel19);
        jLabel19.setBounds(0, 0, 780, 580);

        jPanel1.add(pdtab);
        pdtab.setBounds(0, 0, 780, 570);

        tab.addTab("Personal Details", jPanel1);

        regtab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        regtab.setForeground(new java.awt.Color(255, 255, 204));
        regtab.setLayout(null);

        unmtxt.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        unmtxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                unmtxtFocusLost(evt);
            }
        });
        regtab.add(unmtxt);
        unmtxt.setBounds(200, 70, 190, 30);

        jLabel6.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jLabel6.setText("Username");
        regtab.add(jLabel6);
        jLabel6.setBounds(30, 70, 90, 30);

        jLabel7.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jLabel7.setText("Password");
        regtab.add(jLabel7);
        jLabel7.setBounds(30, 130, 60, 20);

        pwd.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        regtab.add(pwd);
        pwd.setBounds(200, 120, 150, 30);

        repwd.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        regtab.add(repwd);
        repwd.setBounds(200, 170, 150, 30);

        jLabel8.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jLabel8.setText("Re-enter password");
        regtab.add(jLabel8);
        jLabel8.setBounds(30, 170, 130, 30);

        jLabel9.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jLabel9.setText("Security question");
        regtab.add(jLabel9);
        jLabel9.setBounds(30, 210, 120, 30);

        securityQ.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        securityQ.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "select question", "What is your hobby?", "What is your favourite serial?", "What is your first name?", "Who is your favourite sportsman?" }));
        regtab.add(securityQ);
        securityQ.setBounds(200, 210, 290, 40);

        ans.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        regtab.add(ans);
        ans.setBounds(200, 260, 150, 30);

        jLabel10.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jLabel10.setText("Role");
        regtab.add(jLabel10);
        jLabel10.setBounds(30, 330, 90, 30);

        regnext.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        regnext.setText("Next");
        regnext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regnextActionPerformed(evt);
            }
        });
        regtab.add(regnext);
        regnext.setBounds(240, 440, 170, 40);

        Clrreg.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        Clrreg.setText("Clear");
        Clrreg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClrregActionPerformed(evt);
            }
        });
        regtab.add(Clrreg);
        Clrreg.setBounds(430, 440, 140, 40);

        regbck.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        regbck.setText("Back");
        regbck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regbckActionPerformed(evt);
            }
        });
        regtab.add(regbck);
        regbck.setBounds(110, 440, 110, 40);

        jLabel17.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jLabel17.setText("Answer");
        regtab.add(jLabel17);
        jLabel17.setBounds(30, 270, 90, 30);

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jRadioButton1.setText("Admin");
        regtab.add(jRadioButton1);
        jRadioButton1.setBounds(200, 330, 100, 25);

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jRadioButton2.setText("Teacher");
        regtab.add(jRadioButton2);
        jRadioButton2.setBounds(330, 330, 130, 25);

        jLabel11.setText("jLabel11");
        regtab.add(jLabel11);
        jLabel11.setBounds(0, 0, 770, 570);

        tab.addTab("Registration", regtab);

        subtab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        subtab.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                subtabFocusGained(evt);
            }
        });
        subtab.setLayout(null);

        jLabel12.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jLabel12.setText("Select Stream");
        subtab.add(jLabel12);
        jLabel12.setBounds(70, 80, 120, 16);

        strcombo.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        subtab.add(strcombo);
        strcombo.setBounds(190, 70, 300, 40);

        jLabel13.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jLabel13.setText("Select Semester");
        subtab.add(jLabel13);
        jLabel13.setBounds(60, 180, 120, 16);

        semcombo.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        semcombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8" }));
        semcombo.setSelectedIndex(-1);
        semcombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                semcomboItemStateChanged(evt);
            }
        });
        semcombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semcomboActionPerformed(evt);
            }
        });
        subtab.add(semcombo);
        semcombo.setBounds(190, 170, 120, 40);

        jLabel14.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jLabel14.setText("Subjects");
        subtab.add(jLabel14);
        jLabel14.setBounds(60, 280, 80, 30);

        subjects.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        subjects.setOpaque(false);
        jScrollPane2.setViewportView(subjects);

        subtab.add(jScrollPane2);
        jScrollPane2.setBounds(190, 250, 340, 190);

        jButton1.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        subtab.add(jButton1);
        jButton1.setBounds(320, 510, 150, 40);

        subbck.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        subbck.setText("Back");
        subbck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subbckActionPerformed(evt);
            }
        });
        subtab.add(subbck);
        subbck.setBounds(180, 510, 120, 40);

        clrall.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        clrall.setText("Clear");
        clrall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clrallActionPerformed(evt);
            }
        });
        subtab.add(clrall);
        clrall.setBounds(480, 510, 120, 40);

        jLabel15.setText("jLabel15");
        subtab.add(jLabel15);
        jLabel15.setBounds(610, 110, 40, 14);

        jLabel18.setText("jLabel18");
        subtab.add(jLabel18);
        jLabel18.setBounds(0, 0, 770, 570);

        tab.addTab("Subject Details", subtab);

        getContentPane().add(tab, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-792)/2, (screenSize.height-639)/2, 792, 639);
    }// </editor-fold>//GEN-END:initComponents

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // TODO add your handling code here:

        fnm = firstnmtxt.getText();
        lnm = lastnmtxt.getText();
        email = email_id.getText();
        contact = Contact.getText();

        address = addr.getText();
        dd = day.getSelectedItem().toString();
        //mm = month.getSelectedItem().toString();
        //yy = year.getSelectedItem().toString();

        if (fnm.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Enter First Name");
            firstnmtxt.grabFocus();
            return;
        }
        if (lnm.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Enter Last Name");
            lastnmtxt.grabFocus();
            return;
        }
        tchr_id = connect_me.userId(fnm, lnm);
        unmtxt.setText(tchr_id);
        
        unmtxt.setEnabled(false);
        
        if (email.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Enter Email");
            email_id.grabFocus();
            return;
        }
        if (address.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Enter Address");
            addr.grabFocus();
            return;
        }
        if (dd.equals("Day")) {
            JOptionPane.showMessageDialog(rootPane, "Select day");
            return;
        }
        if (mm.equals("Month")) {
            JOptionPane.showMessageDialog(rootPane, "Select Month");
            return;
        }
        if (yy.equals("Year")) {
            JOptionPane.showMessageDialog(rootPane, "Select Year");
            return;
        }

        if (contact.length() != 10) {

            JOptionPane.showMessageDialog(rootPane, "Enter Valid Contact");
            Contact.grabFocus();
            //return;
        } 
        else 
        {
            if(connect_me.contact(contact))
            {
                regtab.setEnabled(true);
               tab.setSelectedIndex(1); 
               
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Enter Valid Contact");
                Contact.grabFocus();
            }
        }
        
        

    }//GEN-LAST:event_nextActionPerformed

    private void ClrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClrActionPerformed
        // TODO add your handl
        clearpd();
    }//GEN-LAST:event_ClrActionPerformed

    private void unmtxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_unmtxtFocusLost
        
    }//GEN-LAST:event_unmtxtFocusLost

    private void regnextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regnextActionPerformed
        // TODO add your handling code here:
        unm = unmtxt.getText();
        pass = pwd.getText();
        repass = repwd.getText();
        secA = ans.getText();
        if (unm.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Enter Username");
            unmtxt.grabFocus();
            return;
        }
        if (pass.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Enter Password");
            pwd.grabFocus();
            return;
        }
        if (repass.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Password missing");
            repwd.grabFocus();
            return;
        }
        if (secA.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Enter answer to security question");
            ans.grabFocus();
            return;
        }
        if(jRadioButton1.isSelected()==true)
        {
            currentRole="Admin";
        }
        else if(jRadioButton2.isSelected()==true)
        {
            currentRole="Teacher";
        }
        else
        {
            JOptionPane.showMessageDialog(this, "select role");
            return;
        }
        secQ = securityQ.getSelectedItem().toString();
        if (secQ.equals("select question")) {
            JOptionPane.showMessageDialog(rootPane, "Select a question");
            return;
        }
        if (pass.equals(repass) == false) {
            JOptionPane.showMessageDialog(rootPane, "Passwords Do Not Match");
            pwd.setText("");
            repwd.setText("");
            pwd.grabFocus();
            return;
        }
        subtab.setEnabled(true);
        tab.setSelectedIndex(2);
    }//GEN-LAST:event_regnextActionPerformed

    private void ClrregActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClrregActionPerformed
        // TODO add your handling code here:
        clearreg();
    }//GEN-LAST:event_ClrregActionPerformed

    private void regbckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regbckActionPerformed
        // TODO add your handling code here:
        tab.setSelectedIndex(0);
    }//GEN-LAST:event_regbckActionPerformed

    private void semcomboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_semcomboItemStateChanged
        // TODO add your handling code here:
        String str, sem;

        //sem=semcombo.getSelectedItem().toString();
        // str=strcombo.getSelectedItem().toString();

        String s3;
        String sub[];

        int i = 0, j = 0;
        try {

            if (strcombo.getSelectedIndex() != -1) {
                str = strcombo.getSelectedItem().toString();

                if (semcombo.getSelectedIndex() != -1) {
                    sem = semcombo.getSelectedItem().toString();
                    connect_me.st = connect_me.con.createStatement();
                    s3 = "select count(sub_name) from subject where semester='" + sem + "' and stream_id=(select stream_id from stream where stream_name='" + str + "')";
                    connect_me.rs = connect_me.st.executeQuery(s3);
                    if (connect_me.rs.next()) {

                        j = connect_me.rs.getInt(1);
                    }
                    sub = new String[j];
                    sub_id = new int[j];
                    connect_me.st.close();
                    s3 = "select sub_id,sub_name from subject where semester='" + sem + "'and stream_id=(select stream_id from stream where stream_name='" + str + "')";

                    connect_me.st = connect_me.con.createStatement();
                    connect_me.rs = connect_me.st.executeQuery(s3);
                    while (connect_me.rs.next()) {
                        sub_id[i] = connect_me.rs.getInt(1);
                        sub[i] = connect_me.rs.getString(2);

                        i++;
                    }

                    subjects.setListData(sub);
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.toString());
        }
    }//GEN-LAST:event_semcomboItemStateChanged

    private void semcomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semcomboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_semcomboActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int sub[] = subjects.getSelectedIndices();
        String str = "", sem = "", s, str_id = "";
        str = strcombo.getSelectedItem().toString();
        sem = semcombo.getSelectedItem().toString();
        if (flag == false) {
            try 
            {
                String date = mm + "/" + dd + "/" + yy;
                connect_me.st = connect_me.con.createStatement();
                String sql = "insert into teachermaster values ('" + tchr_id + "','" + fnm + "','" + lnm + "','" + date + "'," + contact + ",'" + email + "','" + address + "')";
                connect_me.st.executeUpdate(sql);
                //Register reg=new Register(tchr_id);
                //connect_me.role = "teacher";
                //JOptionPane.showMessageDialog(rootPane, fnm+" "+lnm+" Added Successfully.");
                //reg.show();
                connect_me.st.close();
            } 
            catch (Exception e) 
            {
                JOptionPane.showMessageDialog(rootPane, "Please select proper date in Personal Details");
                return;
            }

            try 
            {
                connect_me.st = connect_me.con.createStatement();
                String sql1;
                //connect_me.st=connect_me.con.createStatement();
                sql1 = "insert into login values('" + tchr_id + "','" + pass + "','" + secQ + "','" + secA + "','" + currentRole + "')";

                connect_me.st.executeUpdate(sql1);

            } 
            catch (Exception e) 
            {
                JOptionPane.showMessageDialog(this, e.toString());
            }

            try 
            {
                connect_me.st = connect_me.con.createStatement();
                s = "select stream_id from stream where stream_name='" + str + "'";
                connect_me.rs = connect_me.st.executeQuery(s);
                if (connect_me.rs.next()) {
                    str_id = connect_me.rs.getString(1);
                }
                connect_me.st.close();
            }
            catch (Exception e) 
            {
                JOptionPane.showMessageDialog(this, e.toString());
            }
            for (int i = 0; i < sub.length; i++) {

                try {

                    connect_me.st = connect_me.con.createStatement();
                    s = "insert into teacher_subject values('" + tchr_id + "','" + str_id + "','" + sub_id[sub[i]] + "','" + sem + "') ";
                    connect_me.st.executeUpdate(s);
                    connect_me.st.close();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(rootPane, e.toString());
                }

            }
            wish = JOptionPane.showConfirmDialog(rootPane, "All The Details Inserted Successfully.Do you wish to continue?");

            if (wish == 0) 
            {
                strcombo.setSelectedIndex(-1);
                semcombo.setSelectedIndex(-1);
                //subjects.removeAll();
                subjects.setListData(new String[0]);
                flag = true;

            }
            else if (wish == 1) 
            {
                tab.setSelectedIndex(0);
                clearpd();
                clearreg();
                strcombo.setSelectedIndex(-1);
                semcombo.setSelectedIndex(-1);
                subjects.setListData(new String[0]);

                //this.hide();//change

            }
        } else if (flag == true) {
            try {
                connect_me.st = connect_me.con.createStatement();
                s = "select stream_id from stream where stream_name='" + str + "'";
                connect_me.rs = connect_me.st.executeQuery(s);
                if (connect_me.rs.next()) {
                    str_id = connect_me.rs.getString(1);
                }
                connect_me.st.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.toString());
            }
            for (int i = 0; i < sub.length; i++) {

                try {

                    connect_me.st = connect_me.con.createStatement();
                    s = "insert into teacher_subject values('" + tchr_id + "','" + str_id + "','" + sub_id[sub[i]] + "','" + sem + "') ";
                    connect_me.st.executeUpdate(s);
                    connect_me.st.close();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(rootPane, e.toString());
                }

            }
            wish = JOptionPane.showConfirmDialog(rootPane, "Do you wish to continue?");
            if (wish == 0) {
                strcombo.setSelectedIndex(0);
                semcombo.setSelectedIndex(0);
                subjects.removeAll();

                flag = true;

            } else if (wish == 1) {
                clearpd();
                clearreg();
                clearsub();
                tab.setSelectedIndex(0);

            }

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void subbckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subbckActionPerformed
        // TODO add your handling code here:
        tab.setSelectedIndex(1);
    }//GEN-LAST:event_subbckActionPerformed

    private void clrallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clrallActionPerformed
        // TODO add your handling code here:
        clearpd();
        clearreg();
        clearsub();
    }//GEN-LAST:event_clrallActionPerformed

    private void subtabFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_subtabFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_subtabFocusGained

    private void yearItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_yearItemStateChanged
        // TODO add your handling code here:
        //month.removeAllItems();//Selecting a year after selecting a month
        //month.addItem("Month");
        month.setSelectedItem("Month");
        day.removeAllItems();//Selecting a year after selecting a day
        day.addItem("Day");
        if(year.getSelectedItem().toString().equals("Year"))
        {
            return;
        }
        yy=year.getSelectedItem().toString();
        yr=Integer.parseInt(yy);
        /*

        for (int i = 1; i < 13; i++) 
        {
            month.addItem(i);
        
        }
                */
    }//GEN-LAST:event_yearItemStateChanged

    private void monthItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_monthItemStateChanged
        // TODO add your handling code here:
        if(month.getSelectedIndex()!=-1)
        {
            day.removeAllItems();
            day.addItem("Day");//Selecting a year after selecting a day
            if(month.getSelectedItem().toString().equals("Month"))
            {
                return;
            }
        
            mm=month.getSelectedItem().toString();
            mnth=Integer.parseInt(mm);
            if(Math.IEEEremainder(yr, 4)==0 && mnth==2)
            {
                //JOptionPane.showMessageDialog(this, Math.IEEEremainder(yr, 4));
                //day.removeAllItems();
                //day.addItem("Day");
                for(int i = 1; i <= 29; i++)  
                {
                    day.addItem(i);
                }
            }
            else if(mnth==2)
            {
            //day.removeAllItems();
            //day.addItem("Day");
            for (int i = 1; i <= 28; i++)  
            {
                day.addItem(i);
            }
        }
        else
        {
            switch(mnth)
            {
                case 1:
                case 3:
                case 5:
                case 7:
                case 8:
                case 10:
                case 12:
                {
                    
                    //day.removeAllItems();
                    //day.addItem("Day");
                    for(int i=1;i<=31;i++)
                    {
                        day.addItem(i);
                    }
                    break;
                }
                case 4:
                case 6:
                case 9:
                case 11:
                {
                    //day.removeAllItems();
                    //day.addItem("Day");
                    for(int i=1;i<31;i++)
                    {
                        day.addItem(i);
                    }
                    break;
                }
            }
        }
        }
        
    }//GEN-LAST:event_monthItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Clr;
    private javax.swing.JButton Clrreg;
    private javax.swing.JTextField Contact;
    private javax.swing.JTextArea addr;
    private javax.swing.JTextField ans;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clrall;
    private javax.swing.JComboBox day;
    private javax.swing.JTextField email_id;
    private javax.swing.JLabel firstnm;
    private javax.swing.JTextField firstnmtxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField lastnmtxt;
    private javax.swing.JComboBox month;
    private javax.swing.JButton next;
    public javax.swing.JPanel pdtab;
    private javax.swing.JPasswordField pwd;
    private javax.swing.JButton regbck;
    private javax.swing.JButton regnext;
    public javax.swing.JPanel regtab;
    private javax.swing.JPasswordField repwd;
    private javax.swing.JComboBox securityQ;
    private javax.swing.JComboBox semcombo;
    private javax.swing.JComboBox strcombo;
    private javax.swing.JButton subbck;
    private javax.swing.JList subjects;
    public javax.swing.JPanel subtab;
    public javax.swing.JTabbedPane tab;
    private javax.swing.JTextField unmtxt;
    private javax.swing.JComboBox year;
    // End of variables declaration//GEN-END:variables
}
